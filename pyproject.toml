[tool.poetry]
name = "tigergraphx"
version = "0.1.0"
description = "TigerGraphX is a high-level Python library that simplifies working with TigerGraph by abstracting away low-level REST API details. Inspired by NetworkX, it provides an intuitive interface for common graph tasks, making TigerGraph more accessible for developers and supporting GraphRAG ecosystems and applications."
authors = ["Xuanlei Lin <xuanlei.lin@tigergraph.com>"]
readme = "README.md"
packages = [{ include = "tigergraphx" }]

[tool.poetry.dependencies]
# Core Python Version
python = "^3.12"

# Data Processing
pandas = "^2.2.3"

# Configuration Management
pydantic = "^2.10.1"
pydantic-settings = "^2.6.1"

# Database and Storage
lancedb = "^0.16.0"
pytigergraph = "^1.8.1"

# Large Language Model (LLM) Utilities
tiktoken = "^0.8.0"
openai = "^1.55.0"
tenacity = "^9.0.0"

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.31.0"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-mock = "^3.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
# Unit Test
test_units = {cmd = "pytest ./tests/unit", env = {PYTHONDONTWRITEBYTECODE = "1"}}
test_unit_single = {cmd = "pytest -vs -k 'TestGraph'", env = {PYTHONDONTWRITEBYTECODE = "1"}}
test_units_folder = {cmd = "pytest -vs tests/unit/core/managers", env = {PYTHONDONTWRITEBYTECODE = "1"}}

# Integration Test
test_integration = {cmd = "pytest ./tests/integration", env = {PYTHONDONTWRITEBYTECODE = "1"}}
test_integration_single = {cmd = "pytest -vs -k 'TestGraph'", env = {PYTHONDONTWRITEBYTECODE = "1"}}
test_integration_folder = {cmd = "pytest -vs tests/integration/core", env = {PYTHONDONTWRITEBYTECODE = "1"}}

# Applications
graphrag = "python -m applications.graphrag.main"
